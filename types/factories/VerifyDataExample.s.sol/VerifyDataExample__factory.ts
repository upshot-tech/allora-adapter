/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VerifyDataExample,
  VerifyDataExampleInterface,
} from "../../VerifyDataExample.s.sol/VerifyDataExample";

const _abi = [
  {
    type: "function",
    name: "IS_SCRIPT",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "run",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x6080604052600b805461ff01600160b81b03191676238d0abd53fc68fafa0ccd860446e381b400b5be01000117905534801561003a57600080fd5b50610a4a8061004a6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c04062261461003b578063f8ccbf4714610045575b600080fd5b61004361006c565b005b600b546100589062010000900460ff1681565b604051901515815260200160405180910390f35b60405163c1978d1f60e01b815260206004820152601960248201527f5343524950545f52554e4e45525f505249564154455f4b4559000000000000006044820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f90606401602060405180830381865afa1580156100ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610110919061063f565b6040516001625e79b760e01b0319815260048101829052909150600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa158015610169573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018d9190610674565b60405163ce817d4760e01b815260048101849052909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ce817d4790602401600060405180830381600087803b1580156101dd57600080fd5b505af11580156101f1573d6000803e3d6000fd5b505050506102346040518060400160405280601781526020017f42726f616463617374207374617274656420627920257300000000000000000081525082610593565b600060405180608001604052806001815260200161012c426102569190610696565b81526020016701b69b4ba630f34e81526020016040518060200160405280600081525081525090506000600b60039054906101000a90046001600160a01b03166001600160a01b0316631292835d836040518263ffffffff1660e01b81526004016102c19190610748565b602060405180830381865afa1580156102de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610302919061063f565b905060008080737109709ecfa91a80626ff3989d68f67f5b1dd12d63e341eaa48861035a877f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401606060405180830381865afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf919061075b565b604080516001808252818301909252939650919450925060009190816020015b6103e76105fd565b8152602001906001900390816103df579050506040805180820190915260608101859052608081018490526001600160f81b031960f887901b1660a08201529091508060a1810160405160208183030381529060405281526020018781525081600081518110610459576104596107ae565b6020026020010181905250600b60039054906101000a90046001600160a01b03166001600160a01b0316636214bda16040518060400160405280848152602001604051806020016040528060008152508152506040518263ffffffff1660e01b81526004016104c891906107c4565b6000604051808303816000875af11580156104e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261050f9190810190610905565b505050507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561057157600080fd5b505af1158015610585573d6000803e3d6000fd5b505050505050505050505050565b6105d882826040516024016105a99291906109ea565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526105dc565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180604001604052806060815260200161063a6040518060800160405280600081526020016000815260200160008152602001606081525090565b905290565b60006020828403121561065157600080fd5b5051919050565b80516001600160a01b038116811461066f57600080fd5b919050565b60006020828403121561068657600080fd5b61068f82610658565b9392505050565b818103818111156106b757634e487b7160e01b600052601160045260246000fd5b92915050565b60005b838110156106d85781810151838201526020016106c0565b50506000910152565b600081518084526106f98160208601602086016106bd565b601f01601f19169290920160200192915050565b805182526020810151602083015260408101516040830152600060608201516080606085015261074060808501826106e1565b949350505050565b60208152600061068f602083018461070d565b60008060006060848603121561077057600080fd5b835160ff8116811461078157600080fd5b602085015160409095015190969495509392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208083526060830184516040808487015282825180855260808801915060808160051b8901019450858401935060005b8181101561084757888603607f190183528451805185885261081b868901826106e1565b91890151888303898b0152919050610833818361070d565b9750505093860193918601916001016107f7565b50505092860151858303601f1901938601939093525061086781836106e1565b95945050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561089957610899610798565b604052919050565b600082601f8301126108b257600080fd5b815167ffffffffffffffff8111156108cc576108cc610798565b6108df601f8201601f1916602001610870565b8181528460208386010111156108f457600080fd5b6107408260208301602087016106bd565b6000806000806080858703121561091b57600080fd5b845193506020808601519350604086015167ffffffffffffffff8082111561094257600080fd5b818801915088601f83011261095657600080fd5b81518181111561096857610968610798565b8060051b610977858201610870565b918252838101850191858101908c84111561099157600080fd5b948601945b838610156109b6576109a786610658565b82529486019490860190610996565b60608c01519098509550505050808311156109d057600080fd5b50506109de878288016108a1565b91505092959194509250565b6040815260006109fd60408301856106e1565b905060018060a01b0383166020830152939250505056fea264697066735822122056a523b6bcdd6c0927e7a98435918490aee93820a5e9036677c51aab4b99392364736f6c63430008150033";

type VerifyDataExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyDataExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyDataExample__factory extends ContractFactory {
  constructor(...args: VerifyDataExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VerifyDataExample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifyDataExample__factory {
    return super.connect(runner) as VerifyDataExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyDataExampleInterface {
    return new Interface(_abi) as VerifyDataExampleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VerifyDataExample {
    return new Contract(address, _abi, runner) as unknown as VerifyDataExample;
  }
}
