/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AlloraAdapter,
  AlloraAdapterInterface,
  AlloraAdapterConstructorArgsStruct,
} from "../AlloraAdapter";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "args",
        type: "tuple",
        internalType: "struct AlloraAdapterConstructorArgs",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "aggregator",
            type: "address",
            internalType: "contract IAggregator",
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "NUMERIC_DATA_TYPEHASH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addDataProvider",
    inputs: [
      {
        name: "dataProvider",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "aggregator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAggregator",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "dataValiditySeconds",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "eip712Domain",
    inputs: [],
    outputs: [
      {
        name: "fields",
        type: "bytes1",
        internalType: "bytes1",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "verifyingContract",
        type: "address",
        internalType: "address",
      },
      {
        name: "salt",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "extensions",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getMessage",
    inputs: [
      {
        name: "numericData",
        type: "tuple",
        internalType: "struct NumericData",
        components: [
          {
            name: "topicId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timestamp",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "numericValues",
            type: "uint256[]",
            internalType: "uint256[]",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getTopicValue",
    inputs: [
      {
        name: "topicId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct TopicValue",
        components: [
          {
            name: "recentValue",
            type: "uint192",
            internalType: "uint192",
          },
          {
            name: "recentValueTime",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeDataProvider",
    inputs: [
      {
        name: "dataProvider",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "switchedOn",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "topicValue",
    inputs: [
      {
        name: "topicId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "recentValue",
        type: "uint192",
        internalType: "uint192",
      },
      {
        name: "recentValueTime",
        type: "uint64",
        internalType: "uint64",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "turnOffAdapter",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "turnOnAdapter",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateAggregator",
    inputs: [
      {
        name: "_aggregator",
        type: "address",
        internalType: "contract IAggregator",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateDataValiditySeconds",
    inputs: [
      {
        name: "_dataValiditySeconds",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "validDataProvider",
    inputs: [
      {
        name: "dataProvider",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyData",
    inputs: [
      {
        name: "nd",
        type: "tuple",
        internalType: "struct AlloraAdapterNumericData",
        components: [
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "numericData",
            type: "tuple",
            internalType: "struct NumericData",
            components: [
              {
                name: "topicId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "timestamp",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "extraData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "numericValues",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "numericValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataProvider",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verifyDataViewOnly",
    inputs: [
      {
        name: "nd",
        type: "tuple",
        internalType: "struct AlloraAdapterNumericData",
        components: [
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "numericData",
            type: "tuple",
            internalType: "struct NumericData",
            components: [
              {
                name: "topicId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "timestamp",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "extraData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "numericValues",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "numericValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataProvider",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AlloraAdapterV2AdapterAdminTurnedOff",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "AlloraAdapterV2AdapterAdminTurnedOn",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "AlloraAdapterV2AdapterOwnerAddedDataProvider",
    inputs: [
      {
        name: "dataProvider",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AlloraAdapterV2AdapterOwnerRemovedDataProvider",
    inputs: [
      {
        name: "dataProvider",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AlloraAdapterV2AdapterOwnerUpdatedAggregator",
    inputs: [
      {
        name: "aggregator",
        type: "address",
        indexed: false,
        internalType: "contract IAggregator",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AlloraAdapterV2AdapterOwnerUpdatedDataValiditySeconds",
    inputs: [
      {
        name: "dataValiditySeconds",
        type: "uint48",
        indexed: false,
        internalType: "uint48",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AlloraAdapterV2AdapterVerifiedData",
    inputs: [
      {
        name: "topicId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "numericData",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "dataProvider",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "extraData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EIP712DomainChanged",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlloraAdapterV2InvalidAggregator",
    inputs: [],
  },
  {
    type: "error",
    name: "AlloraAdapterV2InvalidDataProvider",
    inputs: [],
  },
  {
    type: "error",
    name: "AlloraAdapterV2InvalidDataTime",
    inputs: [],
  },
  {
    type: "error",
    name: "AlloraAdapterV2InvalidDataValiditySeconds",
    inputs: [],
  },
  {
    type: "error",
    name: "AlloraAdapterV2NoDataProvided",
    inputs: [],
  },
  {
    type: "error",
    name: "AlloraAdapterV2NotSwitchedOn",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeCastOverflowedUintDowncast",
    inputs: [
      {
        name: "bits",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
] as const;

const _bytecode =
  "0x6101606040526005805460ff191660011790556007805460e160a41b65ffffffffffff60a01b199091161790553480156200003957600080fd5b5060405162001e1638038062001e168339810160408190526200005c91620002c4565b6040518060400160405280600d81526020016c20b63637b930a0b230b83a32b960991b815250604051806040016040528060018152602001603160f81b815250620000b6620000b0620001a160201b60201c565b620001a5565b620000c3826002620001c3565b61012052620000d4816003620001c3565b61014052815160208084019190912060e052815190820120610100524660a0526200016260e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05280516200017890620001a5565b60200151600780546001600160a01b0319166001600160a01b03909216919091179055620004fa565b3390565b600180546001600160a01b0319169055620001c081620001fc565b50565b6000602083511015620001e357620001db836200024c565b9050620001f6565b81620001f08482620003b9565b5060ff90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080829050601f8151111562000283578260405163305a27a960e01b81526004016200027a919062000485565b60405180910390fd5b80516200029082620004d5565b179392505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620001c057600080fd5b600060408284031215620002d757600080fd5b604080519081016001600160401b0381118282101715620002fc57620002fc62000298565b60405282516200030c81620002ae565b815260208301516200031e81620002ae565b60208201529392505050565b600181811c908216806200033f57607f821691505b6020821081036200036057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003b457600081815260208120601f850160051c810160208610156200038f5750805b601f850160051c820191505b81811015620003b0578281556001016200039b565b5050505b505050565b81516001600160401b03811115620003d557620003d562000298565b620003ed81620003e684546200032a565b8462000366565b602080601f8311600181146200042557600084156200040c5750858301515b600019600386901b1c1916600185901b178555620003b0565b600085815260208120601f198616915b82811015620004565788860151825594840194600190910190840162000435565b5085821015620004755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620004b45785810183015185820160400152820162000496565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620003605760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516118c162000555600039600061075b0152600061073001526000610e3d01526000610e1501526000610d7001526000610d9a01526000610dc401526118c16000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639fe4ee47116100b8578063d978275d1161007c578063d978275d14610351578063e30c397814610381578063f2fde38b14610392578063f52cbe77146103a5578063f71d82c4146103c8578063f9244dd7146103db57600080fd5b80639fe4ee4714610288578063a23595461461029b578063b202fb4a14610319578063d395c95e14610321578063d4a2cbf51461033e57600080fd5b80636a8d7b1a1161010a5780636a8d7b1a146101e5578063715018a61461020c57806379ba5097146102145780637b5e6ad81461021c57806384b0196e1461025c5780638da5cb5b1461027757600080fd5b80631f16c53114610147578063245a7bfc1461016d57806345b27f3a14610198578063504eb213146101a257806350910ad6146101d2575b600080fd5b61015a6101553660046113e0565b6103ee565b6040519081526020015b60405180910390f35b600754610180906001600160a01b031681565b6040516001600160a01b039091168152602001610164565b6101a0610483565b005b6101b56101b036600461141c565b6104c3565b604080519283526001600160a01b03909116602083015201610164565b6101a06101e03660046114e5565b6105b5565b61015a7f22ed434bda4cce5a10ec4f276f033905f95a4675d162412a6ee32bbb9d348d6a81565b6101a0610618565b6101a061062c565b61022f61022a366004611509565b6106ab565b6040805182516001600160c01b031681526020928301516001600160401b03169281019290925201610164565b610264610722565b604051610164979695949392919061160f565b6000546001600160a01b0316610180565b6101a06102963660046114e5565b6107ab565b6102f26102a936600461167f565b600460209081526000928352604090922081518083018401805192815290840192909301919091209152546001600160c01b03811690600160c01b90046001600160401b031682565b604080516001600160c01b0390931683526001600160401b03909116602083015201610164565b6101a0610828565b60055461032e9060ff1681565b6040519015158152602001610164565b6101b561034c36600461141c565b610865565b60075461036a90600160a01b900465ffffffffffff1681565b60405165ffffffffffff9091168152602001610164565b6001546001600160a01b0316610180565b6101a06103a03660046114e5565b61087b565b61032e6103b33660046114e5565b60066020526000908152604090205460ff1681565b6101a06103d63660046116c5565b6108ec565b6101a06103e93660046114e5565b610978565b600061047d7f22ed434bda4cce5a10ec4f276f033905f95a4675d162412a6ee32bbb9d348d6a836000015184602001518560400151866060015160405160200161043891906116ed565b60405160208183030381529060405280519060200120604051602001610462959493929190611723565b604051602081830303815290604052805190602001206109d1565b92915050565b61048b6109fe565b6005805460ff191660011790556040517f8badff553c1342da85d2c7afd306dc89a607bb86f2ecb0a80d7972757b2a5fc190600090a1565b6000806104cf83610a58565b604080518082019091529193509150806104e884610c30565b6001600160c01b031681526020016104ff42610c68565b6001600160401b031690526020808501805151600090815260049092526040918290209051820151915190916105349161175a565b9081526040805191829003602090810183208451948201516001600160401b0316600160c01b026001600160c01b03909516949094179093559185015180519201517f5140c656e3e47a00756b45afc01078cbfee394cde2fcc5236eb1e35db090badb926105a89290918691869190611776565b60405180910390a1915091565b6105bd6109fe565b6001600160a01b038116600081815260066020908152604091829020805460ff1916600117905590519182527f9e74c20f66cd40096f692131a5d9e362a452ebc052137bc6cf16e8479e0dd8ab91015b60405180910390a150565b6106206109fe565b61062a6000610c9e565b565b60015433906001600160a01b0316811461069f5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084015b60405180910390fd5b6106a881610c9e565b50565b60408051808201909152600080825260208201526000848152600460205260409081902090516106de90859085906117ad565b90815260408051918290036020908101832083830190925290546001600160c01b03811683526001600160401b03600160c01b909104169082015290509392505050565b6000606080828080836107567f00000000000000000000000000000000000000000000000000000000000000006002610cb7565b6107817f00000000000000000000000000000000000000000000000000000000000000006003610cb7565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6107b36109fe565b6001600160a01b0381166107da576040516322182f8f60e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527f4b747a6d1d8e7c4552f15bb85c75e95284e445525ac3f5126e3878a7934049149060200161060d565b6108306109fe565b6005805460ff191690556040517f63a459ec278426f715c5606cf48dec962e4db0def63f1395316df417aab0ebd490600090a1565b60008061087183610a58565b9094909350915050565b6108836109fe565b600180546001600160a01b0383166001600160a01b031990911681179091556108b46000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6108f46109fe565b8065ffffffffffff1660000361091d5760405163154adaeb60e01b815260040160405180910390fd5b6007805465ffffffffffff60a01b1916600160a01b65ffffffffffff8481168202929092179283905560405192041681527f363185e6c61468b2d67f952a24cc08449308b38312d1680f20ad36dbd488d09f9060200161060d565b6109806109fe565b6001600160a01b038116600081815260066020908152604091829020805460ff1916905590519182527f0aa415894d77ce25a735cab4364630b4dbe8b91cf48d108e9d3328fb7ad49cac910161060d565b600061047d6109de610d63565b8360405161190160f01b8152600281019290925260228201526042902090565b6000546001600160a01b0316331461062a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610696565b600554600090819060ff16610a8057604051632d1f3d1b60e11b815260040160405180910390fd5b602083015160600151516000819003610aac57604051630d9c634360e41b815260040160405180910390fd5b836020015160200151421080610ae6575060075460208581015101514291610ae491600160a01b90910465ffffffffffff16906117bd565b105b15610b0457604051632895771760e11b815260040160405180910390fd5b610b51610b4a610b1786602001516103ee565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b8551610e93565b9150610b5c82610eb7565b610b78576040516241bfbb60e61b815260040160405180910390fd5b80600114610c0457600754602085015160600151604080870151905163723c08ed60e11b81526001600160a01b039093169263e47811da92610bbe9290916004016117de565b602060405180830381865afa158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff919061180c565b610c28565b836020015160600151600081518110610c1f57610c1f611825565b60200260200101515b925050915091565b60006001600160c01b03821115610c64576040516306dfcc6560e41b815260c0600482015260248101839052604401610696565b5090565b60006001600160401b03821115610c6457604080516306dfcc6560e41b8152600481019190915260248101839052604401610696565b600180546001600160a01b03191690556106a881610eee565b606060ff8314610cd157610cca83610f3e565b905061047d565b818054610cdd9061183b565b80601f0160208091040260200160405190810160405280929190818152602001828054610d099061183b565b8015610d565780601f10610d2b57610100808354040283529160200191610d56565b820191906000526020600020905b815481529060010190602001808311610d3957829003601f168201915b5050505050905092915050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610dbc57507f000000000000000000000000000000000000000000000000000000000000000046145b15610de657507f000000000000000000000000000000000000000000000000000000000000000090565b610e8e604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b905090565b6000806000610ea28585610f7d565b91509150610eaf81610fc2565b509392505050565b600080546001600160a01b038381169116148061047d5750506001600160a01b031660009081526006602052604090205460ff1690565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606000610f4b8361110c565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000808251604103610fb35760208301516040840151606085015160001a610fa787828585611134565b94509450505050610fbb565b506000905060025b9250929050565b6000816004811115610fd657610fd6611875565b03610fde5750565b6001816004811115610ff257610ff2611875565b0361103f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610696565b600281600481111561105357611053611875565b036110a05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610696565b60038160048111156110b4576110b4611875565b036106a85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610696565b600060ff8216601f81111561047d57604051632cd44ac360e21b815260040160405180910390fd5b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561116b57506000905060036111ef565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111bf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111e8576000600192509250506111ef565b9150600090505b94509492505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611230576112306111f8565b60405290565b604051606081016001600160401b0381118282101715611230576112306111f8565b604051601f8201601f191681016001600160401b0381118282101715611280576112806111f8565b604052919050565b600082601f83011261129957600080fd5b81356001600160401b038111156112b2576112b26111f8565b6112c5601f8201601f1916602001611258565b8181528460208386010111156112da57600080fd5b816020850160208301376000918101602001919091529392505050565b60006080828403121561130957600080fd5b61131161120e565b9050813581526020808301358183015260408301356001600160401b038082111561133b57600080fd5b61134786838701611288565b6040850152606085013591508082111561136057600080fd5b818501915085601f83011261137457600080fd5b813581811115611386576113866111f8565b8060051b9150611397848301611258565b81815291830184019184810190888411156113b157600080fd5b938501935b838510156113cf578435825293850193908501906113b6565b606087015250939695505050505050565b6000602082840312156113f257600080fd5b81356001600160401b0381111561140857600080fd5b611414848285016112f7565b949350505050565b60006020828403121561142e57600080fd5b81356001600160401b038082111561144557600080fd5b908301906060828603121561145957600080fd5b611461611236565b82358281111561147057600080fd5b61147c87828601611288565b82525060208301358281111561149157600080fd5b61149d878286016112f7565b6020830152506040830135828111156114b557600080fd5b6114c187828601611288565b60408301525095945050505050565b6001600160a01b03811681146106a857600080fd5b6000602082840312156114f757600080fd5b8135611502816114d0565b9392505050565b60008060006040848603121561151e57600080fd5b8335925060208401356001600160401b038082111561153c57600080fd5b818601915086601f83011261155057600080fd5b81358181111561155f57600080fd5b87602082850101111561157157600080fd5b6020830194508093505050509250925092565b60005b8381101561159f578181015183820152602001611587565b50506000910152565b600081518084526115c0816020860160208601611584565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b83811015611604578151875295820195908201906001016115e8565b509495945050505050565b60ff60f81b8816815260e06020820152600061162e60e08301896115a8565b828103604084015261164081896115a8565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152905061167181856115d4565b9a9950505050505050505050565b6000806040838503121561169257600080fd5b8235915060208301356001600160401b038111156116af57600080fd5b6116bb85828601611288565b9150509250929050565b6000602082840312156116d757600080fd5b813565ffffffffffff8116811461150257600080fd5b815160009082906020808601845b83811015611717578151855293820193908201906001016116fb565b50929695505050505050565b85815284602082015283604082015260a06060820152600061174860a08301856115a8565b90508260808301529695505050505050565b6000825161176c818460208701611584565b9190910192915050565b84815283602082015260018060a01b03831660408201526080606082015260006117a360808301846115a8565b9695505050505050565b8183823760009101908152919050565b8082018082111561047d57634e487b7160e01b600052601160045260246000fd5b6040815260006117f160408301856115d4565b828103602084015261180381856115a8565b95945050505050565b60006020828403121561181e57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061184f57607f821691505b60208210810361186f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122082b18598051b7f9359a311090b82cdf5ead994fcb983787ec07685ab810d4ba364736f6c63430008150033";

type AlloraAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlloraAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlloraAdapter__factory extends ContractFactory {
  constructor(...args: AlloraAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    args: AlloraAdapterConstructorArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(args, overrides || {});
  }
  override deploy(
    args: AlloraAdapterConstructorArgsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(args, overrides || {}) as Promise<
      AlloraAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AlloraAdapter__factory {
    return super.connect(runner) as AlloraAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlloraAdapterInterface {
    return new Interface(_abi) as AlloraAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AlloraAdapter {
    return new Contract(address, _abi, runner) as unknown as AlloraAdapter;
  }
}
