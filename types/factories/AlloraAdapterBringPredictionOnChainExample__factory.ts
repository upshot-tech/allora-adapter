/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AlloraAdapterBringPredictionOnChainExample,
  AlloraAdapterBringPredictionOnChainExampleInterface,
} from "../AlloraAdapterBringPredictionOnChainExample";

const _abi = [
  {
    type: "function",
    name: "acceptOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "alloraAdapter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IAlloraAdapter",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "callProtocolFunctionWithAlloraAdapterPredictionValue",
    inputs: [
      {
        name: "protocolFunctionArgument",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "alloraAdapterData",
        type: "tuple",
        internalType: "struct AlloraAdapterNumericData",
        components: [
          {
            name: "signedNumericData",
            type: "tuple[]",
            internalType: "struct SignedNumericData[]",
            components: [
              {
                name: "signature",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "numericData",
                type: "tuple",
                internalType: "struct NumericData",
                components: [
                  {
                    name: "topicId",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "timestamp",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "numericValue",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "extraData",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "callProtocolFunctionWithExistingValue",
    inputs: [
      {
        name: "protocolFunctionArgument",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "topicId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "pendingOwner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setAlloraAdapterContract",
    inputs: [
      {
        name: "alloraAdapter_",
        type: "address",
        internalType: "contract IAlloraAdapter",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferStarted",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x6080604052600280546001600160a01b031916734341a3f0a350c2428184a727bab86e16d4ba701817905534801561003657600080fd5b5061004033610045565b6100b1565b600180546001600160a01b031916905561005e81610061565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a40806100c06000396000f3fe6080604052600436106100865760003560e01c806379ba50971161005957806379ba5097146100e85780638da5cb5b146100fd578063afb9790014610133578063e30c397814610153578063f2fde38b1461017157600080fd5b80633b58142a1461008b57806360d5d371146100a057806369a924d5146100b3578063715018a6146100d3575b600080fd5b61009e610099366004610525565b610191565b005b61009e6100ae366004610573565b61021b565b3480156100bf57600080fd5b5061009e6100ce3660046105aa565b61033e565b3480156100df57600080fd5b5061009e610368565b3480156100f457600080fd5b5061009e61037c565b34801561010957600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b34801561013f57600080fd5b50600254610117906001600160a01b031681565b34801561015f57600080fd5b506001546001600160a01b0316610117565b34801561017d57600080fd5b5061009e61018c3660046105aa565b6103f6565b604051636214bda160e01b8152600090734341a3f0a350c2428184a727bab86e16d4ba701890636214bda1906101cb908590600401610644565b6000604051808303816000875af11580156101ea573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102129190810190610872565b50505050505050565b60408051630f6bcd5b60e31b815260048101839052602481019190915260006044820181905290734341a3f0a350c2428184a727bab86e16d4ba701890637b5e6ad8906064016040805180830381865afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a1919061095c565b9050428160200151610e106102b691906109d4565b67ffffffffffffffff1610156103395760405162461bcd60e51b815260206004820152603760248201527f416c6c6f7261416461707465724272696e6750726564696374696f6e4f6e436860448201527f61696e4578616d706c653a207374616c652076616c756500000000000000000060648201526084015b60405180910390fd5b505050565b610346610467565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b610370610467565b61037a60006104c1565b565b60015433906001600160a01b031681146103ea5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610330565b6103f3816104c1565b50565b6103fe610467565b600180546001600160a01b0383166001600160a01b0319909116811790915561042f6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000546001600160a01b0316331461037a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610330565b600180546001600160a01b03191690556103f381600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561053857600080fd5b82359150602083013567ffffffffffffffff81111561055657600080fd5b83016040818603121561056857600080fd5b809150509250929050565b6000806040838503121561058657600080fd5b50508035926020909101359150565b6001600160a01b03811681146103f357600080fd5b6000602082840312156105bc57600080fd5b81356105c781610595565b9392505050565b6000808335601e198436030181126105e557600080fd5b830160208101925035905067ffffffffffffffff81111561060557600080fd5b80360382131561061457600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000602080835260608084018535601e1987360301811261066457600080fd5b8601803584820167ffffffffffffffff82111561068057600080fd5b8160051b80360382131561069357600080fd5b604089880181905294839052608094908901850190858a01600036879003605e19015b8682101561076e578c8503607f1901835285358181126106d557600080fd5b88018b81016106e481806105ce565b91508688526106f6878901838361061b565b91505085820135609e1983360301811261070f57600080fd5b8281019250508c82018782038e89015280358252868301358e8301528c8301358783015261073f8c8401826105ce565b935090508b8d8301526107558c8301848361061b565b988e019897505050928b019250600191909101906106b6565b50505061077d888c018c6105ce565b98509650601f198a830301818b01525061079881888861061b565b9a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107e5576107e56107a6565b604052919050565b600082601f8301126107fe57600080fd5b815167ffffffffffffffff811115610818576108186107a6565b602061082c601f8301601f191682016107bc565b828152858284870101111561084057600080fd5b60005b8381101561085e578581018301518282018401528201610843565b506000928101909101919091529392505050565b6000806000806080858703121561088857600080fd5b845193506020808601519350604086015167ffffffffffffffff808211156108af57600080fd5b818801915088601f8301126108c357600080fd5b8151818111156108d5576108d56107a6565b8060051b6108e48582016107bc565b918252838101850191858101908c8411156108fe57600080fd5b948601945b83861015610928578551925061091883610595565b8282529486019490860190610903565b60608c015190985095505050508083111561094257600080fd5b5050610950878288016107ed565b91505092959194509250565b60006040828403121561096e57600080fd5b6040516040810167ffffffffffffffff8282108183111715610992576109926107a6565b6040919091528351906001600160c01b03821682146109b057600080fd5b90825260208401519080821682146109c757600080fd5b5060208201529392505050565b67ffffffffffffffff818116838216019080821115610a0357634e487b7160e01b600052601160045260246000fd5b509291505056fea2646970667358221220efbb8c0549f46cd6383d9dee5cc95504d8c5bd610edaeb03c056ea55d14f3a0e64736f6c63430008150033";

type AlloraAdapterBringPredictionOnChainExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlloraAdapterBringPredictionOnChainExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlloraAdapterBringPredictionOnChainExample__factory extends ContractFactory {
  constructor(
    ...args: AlloraAdapterBringPredictionOnChainExampleConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AlloraAdapterBringPredictionOnChainExample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AlloraAdapterBringPredictionOnChainExample__factory {
    return super.connect(
      runner
    ) as AlloraAdapterBringPredictionOnChainExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlloraAdapterBringPredictionOnChainExampleInterface {
    return new Interface(
      _abi
    ) as AlloraAdapterBringPredictionOnChainExampleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AlloraAdapterBringPredictionOnChainExample {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AlloraAdapterBringPredictionOnChainExample;
  }
}
