/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAlloraAdapter,
  IAlloraAdapterInterface,
} from "../IAlloraAdapter";

const _abi = [
  {
    type: "function",
    name: "getTopicValue",
    inputs: [
      {
        name: "topicId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "extraData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct TopicValue",
        components: [
          {
            name: "recentValue",
            type: "uint192",
            internalType: "uint192",
          },
          {
            name: "recentValueTime",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "verifyData",
    inputs: [
      {
        name: "nd",
        type: "tuple",
        internalType: "struct AlloraAdapterNumericData",
        components: [
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "numericData",
            type: "tuple",
            internalType: "struct NumericData",
            components: [
              {
                name: "topicId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "timestamp",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "extraData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "numericValues",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "numericValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataProvider",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "verifyDataViewOnly",
    inputs: [
      {
        name: "pd",
        type: "tuple",
        internalType: "struct AlloraAdapterNumericData",
        components: [
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "numericData",
            type: "tuple",
            internalType: "struct NumericData",
            components: [
              {
                name: "topicId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "timestamp",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "extraData",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "numericValues",
                type: "uint256[]",
                internalType: "uint256[]",
              },
            ],
          },
          {
            name: "extraData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "numericValue",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dataProvider",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IAlloraAdapter__factory {
  static readonly abi = _abi;
  static createInterface(): IAlloraAdapterInterface {
    return new Interface(_abi) as IAlloraAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAlloraAdapter {
    return new Contract(address, _abi, runner) as unknown as IAlloraAdapter;
  }
}
